
name: Publishing releases

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    name: Publishing
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y libgtk-3-dev

      - name: Checking out sources
        uses: actions/checkout@v1

      - name: Running cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: Packaging final binary
        shell: bash
        run: |
          cd target/release
          tar czvf linux-to-win.tar.gz linux-to-win
          shasum -a 512 linux-to-win.tar.gz > linux-to-win.sha512

      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/linux-to-win.tar.gz
            target/release/linux-to-win.sha512

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-aur:
    runs-on: ubuntu-latest
    container: archlinux/base

    steps:
      # see: https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167#M1027
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build and publish to aur.archlinux.org
        run: |
          pacman -Sy --needed --noconfirm sudo git binutils openssh && \
          useradd builduser -m && \
          su builduser -c "
            mkdir ~/.ssh && \
            echo \"${{ secrets.SSH_PUBLIC_KEY }}\" > ~/.ssh/id_rsa.pub && \
            echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa && \
            chmod 600 ~/.ssh/id_rsa && \
            ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts && \
            git config --global user.email \"aur@palgunov.com\" && \
            git config --global user.name \"Toxblh Bot\" && \
            cd ~ && \
            git clone ssh://aur@aur.archlinux.org/linux-to-win.git && \
            cd linux-to-win && \
            sed -i \"s/pkgver=.*/pkgver=${{ steps.get_version.outputs.VERSION }}/\" PKGBUILD && \
            makepkg --printsrcinfo > .SRCINFO
            git status && \
            git diff && \
            git add . && \
            git commit -m 'release ${{ steps.get_version.outputs.VERSION }}' && \
            git push origin master
          "
